A11y Agent Plan

Phase 1 — Static Analysis
* Run ESLint + jsx-a11y on TSX files.
* Feed detected issues to LLM fixer (suggest_a11y_fixes).
* Write updated file to disk.

Phase 2 — Runtime / Visual Analysis
* Render the updated file in a demo web server.
* Run Lighthouse (or axe-core) to detect accessibility issues not caught by the linter.
* Lighthouse returns JSON, e.g.:
{
  "audits": {
    "color-contrast": {
      "id": "color-contrast",
      "title": "Background and foreground colors do not have a sufficient contrast ratio.",
      "description": "Text elements should have sufficient color contrast against their background.",
      "score": 0,
      "details": {
        "items": [
          { "node": { "selector": "p.low-contrast", "snippet": "<p class=\"low-contrast\">Some text</p>" } }
        ]
      }
    },
    "image-alt": {
      "id": "image-alt",
      "title": "Image elements do not have [alt] attributes.",
      "description": "Add meaningful alt text to images to improve accessibility.",
      "score": 0,
      "details": {
        "items": [
          { "node": { "selector": "img#profile", "snippet": "<img id=\"profile\" src=\"profile.png\">" } }
        ]
      }
    }
  }
}

Phase 3 — LLM Mapping & Normalization
* Feed Lighthouse JSON + TSX source code into LLM.
* LLM tasks:
    1. Match DOM snippets/selectors to TSX source code.
    2. Estimate affected line numbers.
    3. Output structured JSON with fields: issue_id, source_file, lines, relevant_code.
    4. Normalize issues into linter-style format, e.g., 27:7 error Text has insufficient contrast jsx-a11y/color-contrast.

Recommended Enhancements
1. Use optional data-source markers in JSX for precise mapping: <p data-source="test.tsx:27">...</p>.
2. Include selector + snippet + surrounding code context to handle repeated or dynamic elements.
3. Ensure LLM output is JSON-only with consistent structure.
4. Implement verification loop with max iterations and confidence checks to prevent infinite loops.

Phase 4 — Fixes & Verification
* Feed normalized issues to suggest_a11y_fixes to apply automated fixes.
* Re-run ESLint and Lighthouse to verify that both static and runtime issues are resolved.
* Repeat loop if necessary until all issues are addressed.
